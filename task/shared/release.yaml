apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
      - name: from-build-pack
        resources: {}
        taskSpec:
          metadata: {}
          stepTemplate:
            env:
              - name: HOME
                value: /tekton/home
            name: ""
            resources:
              # override limits for all containers here
              limits: {}
            workingDir: /workspace/source
          steps:
            - image: gcr.io/kaniko-project/executor:v1.3.0-debug
              name: build-container-build
              resources: 
                requests:
                  cpu: 200m
                  memory: 256Mi
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:latest
            - image: ghcr.io/jenkins-x/jx-boot:3.10.81
              name: jx-variables
              resources:
                # set requests for the pod here
                requests:
                  cpu: 400m
                  memory: 128Mi
              script: |
                #!/usr/bin/env sh
                jx gitops variables
                #===== custom workaround for jx failure
                source .jx/variables.sh
                echo "Echoing version ..."
                cat VERSION
                truncate -s0 version
                echo $VERSION > VERSION
                echo "Echoing version ..."
                cat VERSION
                #===== end custom workaround
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
